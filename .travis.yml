# Configure Travis CI
# https://travis-ci.org/

# In order to test two different languages, we have to use a matrix (e.g. a parallel job)
# https://stackoverflow.com/questions/27644586/how-to-set-up-travis-ci-with-multiple-languages
matrix:
  include:
    - name: Job 1 - Client
      language: node_js
      node_js:
        # Use the latest stable Node.js release
        - node
      before_script:
        - echo "Installing environment variables..."
        - cp .env_template .env
        - cd client
        - echo "Installing NPM modules..."
        - npm install
        - echo "Installing the Airbnb rules..."
        - npx install-peerdeps --dev eslint-config-airbnb-base
      script:
        - echo "Building the client..."
        - ./build_client.sh
        - echo "Linting the client code..."
        - ./lint_client.sh
        - echo "Running client tests..."
        - npm test

    - name: Job 2 - Server
      language: go
      go:
        # This will automatically choose the latest released Go version
        - 1.x
      env:
        # This is needed so that Travis will use the "go.mod" file
        - GO111MODULE=on
      before_script:
        # Install the Go linter
        # https://github.com/golangci/golangci-lint
        - echo "Installing golangci-lint (the Go linter)..."
        - cd server
        - source .golangci-lint.version
        - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin $GOLANGCI_LINT_VERSION
      script:
        - echo "Building the server..."
        - ./build_server.sh
        - echo "Linting the server code..."
        - ./lint_server.sh

    - name: Job 3 - Spell Check
      language: node_js
      node_js:
        # Use the latest stable Node.js release
        - node
      before_script:
        - cd spell_check
        - echo "Installing NPM modules..."
        - npm install
      script:
        - echo "Spell checking the entire project..."
        - ./spell_check.sh

notifications:
  email:
    on_success: never
    on_failure: never
